// exitCode: 0   val t1a: () => Any = foo                // ok, eta-expansion
// exitCode: 0   val t1b: () => Any = { val t = foo; t } // `()`-insert b/c no expected type
// exitCode: 0   val t1c: () => Any = foo _              // ok, explicit eta-expansion requested
// exitCode: 0   val t1d: Any       = foo _              // ok, explicit eta-expansion requested
// exitCode: 1   val t1e: Any       = foo() _            // error: _ must follow method
/d/shisa/target/tests/EtaX/EtaX/EtaX.08.scala:26: error: _ must follow method; cannot follow () => String
  val t1e: Any       = foo() _            // error: _ must follow method
                          ^
one error found
// exitCode: 1   val t2a: () => Any = bar                   // error: no eta-expansion of nullary methods
/d/shisa/target/tests/EtaX/EtaX/EtaX.10.scala:28: error: type mismatch;
 found   : String
 required: () => Any
  val t2a: () => Any = bar                   // error: no eta-expansion of nullary methods
                       ^
one error found
// exitCode: 0   val t2b: Any       = { val t = bar   ; t } // ok: apply
// exitCode: 1   val t2c: () => Any = bar()                 // error: bar doesn't take arguments, so expanded to bar.apply(), which misses an argument
/d/shisa/target/tests/EtaX/EtaX/EtaX.12.scala:30: error: not enough arguments for method apply: (i: Int)Char in class StringOps.
Unspecified value parameter i.
  val t2c: () => Any = bar()                 // error: bar doesn't take arguments, so expanded to bar.apply(), which misses an argument
                          ^
one error found
// exitCode: 0   val t2d: () => Any = bar _                 // ok
// exitCode: 0   val t2e: () => Any = { val t = bar _ ; t } // ?/ok
// exitCode: 0   val t2f: Any       = bar _                 // ok
// exitCode: 1   val t2g: Any       = bar() _               // error: not enough arguments for method apply
/d/shisa/target/tests/EtaX/EtaX/EtaX.16.scala:34: error: not enough arguments for method apply: (i: Int)Char in class StringOps.
Unspecified value parameter i.
  val t2g: Any       = bar() _               // error: not enough arguments for method apply
                          ^
one error found
// exitCode: 0   val t3a: () => Any = baz                   // eta-expansion, but lint warning
// exitCode: 1   val t2Sam0S: Sam0S = baz                   // err??/warn/succ: -Xlint:eta-zero + -Xlint:eta-sam, no eta-expansion w/o 2.14?
/d/shisa/target/tests/EtaX/EtaX/EtaX.19.scala:37: error: type mismatch;
 found   : String
 required: Sam0S
  val t2Sam0S: Sam0S = baz                   // err??/warn/succ: -Xlint:eta-zero + -Xlint:eta-sam, no eta-expansion w/o 2.14?
                       ^
one error found
// exitCode: 1   val t2Sam0J: Sam0J = baz                   // err??/warn/succ: -Xlint:eta-zero, no eta-expansion w/o 2.14?
/d/shisa/target/tests/EtaX/EtaX/EtaX.20.scala:38: error: type mismatch;
 found   : String
 required: Sam0J
  val t2Sam0J: Sam0J = baz                   // err??/warn/succ: -Xlint:eta-zero, no eta-expansion w/o 2.14?
                       ^
one error found
// exitCode: 0   val t3b: Any       = { val t = baz   ; t } // ?/succ/warn: apply, ()-insertion
// exitCode: 0   val t3a: () => Any = baz _                 // ok
// exitCode: 0   val t3c: () => Any = { val t = baz _ ; t } // ok?/ok
// exitCode: 0   val t3a: Any       = baz _                 // ok
// exitCode: 1   val t3d: Any       = baz() _               // error: _ must follow method
/d/shisa/target/tests/EtaX/EtaX/EtaX.25.scala:43: error: _ must follow method; cannot follow String
  val t3d: Any       = baz() _               // error: _ must follow method
                          ^
one error found
// exitCode: 0   val t4a: () => Any = zap     // eta-expansion, but lint warning
// exitCode: 0   val t4b: () => Any = zap()   // ditto
// exitCode: 0   val t4c: () => Any = zap _   // ok
// exitCode: 0   val t4d: () => Any = zap() _ // ok
// exitCode: 0   val t5b: Any => Any = zup                   // ok
// exitCode: 0   val t5c: Sam1S      = zup                   // ok, but warning
// exitCode: 0   val t5d: Sam1J      = zup                   // ok
// exitCode: 1   val t5e: Any => Any = { val t = zup   ; t } // error in 2.13, eta-expansion in 2.14
/d/shisa/target/tests/EtaX/EtaX/EtaX.35.scala:53: error: missing argument list for method zup in class TestBase
Unapplied methods are only converted to functions when a function type is expected.
You can make this conversion explicit by writing `zup _` or `zup(_)` instead of `zup`.
  val t5e: Any => Any = { val t = zup   ; t } // error in 2.13, eta-expansion in 2.14
                                  ^
one error found
// exitCode: 0   val t5f: Any => Any = { val t = zup _ ; t } // ?/ok
// exitCode: 1   new A().boom // ?/?/err: apply, ()-insertion
/d/shisa/target/tests/EtaX/EtaX/EtaX.38.scala:56: error: trait A is abstract; cannot be instantiated
  new A().boom // ?/?/err: apply, ()-insertion
  ^
one error found
// exitCode: 1   val ys = { val t = scala.collection.mutable.Map(1 -> "foo"); xs.clone } // ?/?/ok
/d/shisa/target/tests/EtaX/EtaX/EtaX.40.scala:58: error: not found: value xs
  val ys = { val t = scala.collection.mutable.Map(1 -> "foo"); xs.clone } // ?/?/ok
                                                               ^
one error found
