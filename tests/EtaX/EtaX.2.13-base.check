// exitCode: 0   def foo()       = () => ""
// exitCode: 0   def bar         = ""
// exitCode: 0   def baz()       = ""
// exitCode: 0   def zap()()     = ""
// exitCode: 0   def zup(x: Any) = ""
// exitCode: 1   val t1a: () => Any = foo                // ok, eta-expansion
target/tests/EtaX/EtaX/EtaX.10.scala:19: error: not found: value foo
  val t1a: () => Any = foo                // ok, eta-expansion
                       ^
one error found
// exitCode: 1   val t1b: () => Any = { val t = foo; t } // `()`-insert b/c no expected type
target/tests/EtaX/EtaX/EtaX.11.scala:20: error: not found: value foo
  val t1b: () => Any = { val t = foo; t } // `()`-insert b/c no expected type
                                 ^
one error found
// exitCode: 1   val t1c: () => Any = foo _              // ok, explicit eta-expansion requested
target/tests/EtaX/EtaX/EtaX.12.scala:21: error: not found: value foo
  val t1c: () => Any = foo _              // ok, explicit eta-expansion requested
                       ^
one error found
// exitCode: 1   val t1d: Any       = foo _              // ok, explicit eta-expansion requested
target/tests/EtaX/EtaX/EtaX.13.scala:22: error: not found: value foo
  val t1d: Any       = foo _              // ok, explicit eta-expansion requested
                       ^
one error found
// exitCode: 1   val t1e: Any       = foo() _            // error: _ must follow method
target/tests/EtaX/EtaX/EtaX.14.scala:23: error: not found: value foo
  val t1e: Any       = foo() _            // error: _ must follow method
                       ^
one error found
// exitCode: 1   val t2a: () => Any = bar                   // error: no eta-expansion of nullary methods
target/tests/EtaX/EtaX/EtaX.16.scala:25: error: not found: value bar
  val t2a: () => Any = bar                   // error: no eta-expansion of nullary methods
                       ^
one error found
// exitCode: 1   val t2b: Any       = { val t = bar   ; t } // ok: apply
target/tests/EtaX/EtaX/EtaX.17.scala:26: error: not found: value bar
  val t2b: Any       = { val t = bar   ; t } // ok: apply
                                 ^
one error found
// exitCode: 1   val t2c: () => Any = bar()                 // error: bar doesn't take arguments, so expanded to bar.apply(), which misses an argument
target/tests/EtaX/EtaX/EtaX.18.scala:27: error: not found: value bar
  val t2c: () => Any = bar()                 // error: bar doesn't take arguments, so expanded to bar.apply(), which misses an argument
                       ^
one error found
// exitCode: 1   val t2d: () => Any = bar _                 // ok
target/tests/EtaX/EtaX/EtaX.19.scala:28: error: not found: value bar
  val t2d: () => Any = bar _                 // ok
                       ^
one error found
// exitCode: 1   val t2e: () => Any = { val t = bar _ ; t } // ?/ok
target/tests/EtaX/EtaX/EtaX.20.scala:29: error: not found: value bar
  val t2e: () => Any = { val t = bar _ ; t } // ?/ok
                                 ^
one error found
// exitCode: 1   val t2f: Any       = bar _                 // ok
target/tests/EtaX/EtaX/EtaX.21.scala:30: error: not found: value bar
  val t2f: Any       = bar _                 // ok
                       ^
one error found
// exitCode: 1   val t2g: Any       = bar() _               // error: not enough arguments for method apply
target/tests/EtaX/EtaX/EtaX.22.scala:31: error: not found: value bar
  val t2g: Any       = bar() _               // error: not enough arguments for method apply
                       ^
one error found
// exitCode: 1   val t3a: () => Any = baz                   // eta-expansion, but lint warning
target/tests/EtaX/EtaX/EtaX.24.scala:33: error: not found: value baz
  val t3a: () => Any = baz                   // eta-expansion, but lint warning
                       ^
one error found
// exitCode: 1   val t2Sam0S: Sam0S = baz                   // err??/warn/succ: -Xlint:eta-zero + -Xlint:eta-sam, no eta-expansion w/o 2.14?
target/tests/EtaX/EtaX/EtaX.25.scala:34: error: not found: value baz
  val t2Sam0S: Sam0S = baz                   // err??/warn/succ: -Xlint:eta-zero + -Xlint:eta-sam, no eta-expansion w/o 2.14?
                       ^
one error found
// exitCode: 1   val t2Sam0J: Sam0J = baz                   // err??/warn/succ: -Xlint:eta-zero, no eta-expansion w/o 2.14?
target/tests/EtaX/EtaX/EtaX.26.scala:35: error: not found: value baz
  val t2Sam0J: Sam0J = baz                   // err??/warn/succ: -Xlint:eta-zero, no eta-expansion w/o 2.14?
                       ^
one error found
// exitCode: 1   val t3b: Any       = { val t = baz   ; t } // ?/succ/warn: apply, ()-insertion
target/tests/EtaX/EtaX/EtaX.27.scala:36: error: not found: value baz
  val t3b: Any       = { val t = baz   ; t } // ?/succ/warn: apply, ()-insertion
                                 ^
one error found
// exitCode: 1   val t3a: () => Any = baz _                 // ok
target/tests/EtaX/EtaX/EtaX.28.scala:37: error: not found: value baz
  val t3a: () => Any = baz _                 // ok
                       ^
one error found
// exitCode: 1   val t3c: () => Any = { val t = baz _ ; t } // ok?/ok
target/tests/EtaX/EtaX/EtaX.29.scala:38: error: not found: value baz
  val t3c: () => Any = { val t = baz _ ; t } // ok?/ok
                                 ^
one error found
// exitCode: 1   val t3a: Any       = baz _                 // ok
target/tests/EtaX/EtaX/EtaX.30.scala:39: error: not found: value baz
  val t3a: Any       = baz _                 // ok
                       ^
one error found
// exitCode: 1   val t3d: Any       = baz() _               // error: _ must follow method
target/tests/EtaX/EtaX/EtaX.31.scala:40: error: not found: value baz
  val t3d: Any       = baz() _               // error: _ must follow method
                       ^
one error found
// exitCode: 1   val t4a: () => Any = zap     // eta-expansion, but lint warning
target/tests/EtaX/EtaX/EtaX.33.scala:42: error: not found: value zap
  val t4a: () => Any = zap     // eta-expansion, but lint warning
                       ^
one error found
// exitCode: 1   val t4b: () => Any = zap()   // ditto
target/tests/EtaX/EtaX/EtaX.34.scala:43: error: not found: value zap
  val t4b: () => Any = zap()   // ditto
                       ^
one error found
// exitCode: 1   val t4c: () => Any = zap _   // ok
target/tests/EtaX/EtaX/EtaX.35.scala:44: error: not found: value zap
  val t4c: () => Any = zap _   // ok
                       ^
one error found
// exitCode: 1   val t4d: () => Any = zap() _ // ok
target/tests/EtaX/EtaX/EtaX.36.scala:45: error: not found: value zap
  val t4d: () => Any = zap() _ // ok
                       ^
one error found
// exitCode: 1   val t5b: Any => Any = zup                   // ok
target/tests/EtaX/EtaX/EtaX.38.scala:47: error: not found: value zup
  val t5b: Any => Any = zup                   // ok
                        ^
one error found
// exitCode: 1   val t5c: Sam1S      = zup                   // ok, but warning
target/tests/EtaX/EtaX/EtaX.39.scala:48: error: not found: value zup
  val t5c: Sam1S      = zup                   // ok, but warning
                        ^
one error found
// exitCode: 1   val t5d: Sam1J      = zup                   // ok
target/tests/EtaX/EtaX/EtaX.40.scala:49: error: not found: value zup
  val t5d: Sam1J      = zup                   // ok
                        ^
one error found
// exitCode: 1   val t5e: Any => Any = { val t = zup   ; t } // error in 2.13, eta-expansion in 2.14
target/tests/EtaX/EtaX/EtaX.41.scala:50: error: not found: value zup
  val t5e: Any => Any = { val t = zup   ; t } // error in 2.13, eta-expansion in 2.14
                                  ^
one error found
// exitCode: 1   val t5f: Any => Any = { val t = zup _ ; t } // ?/ok
target/tests/EtaX/EtaX/EtaX.42.scala:51: error: not found: value zup
  val t5f: Any => Any = { val t = zup _ ; t } // ?/ok
                                  ^
one error found
// exitCode: 1   new A().boom // ?/?/err: apply, ()-insertion
target/tests/EtaX/EtaX/EtaX.44.scala:53: error: trait A is abstract; cannot be instantiated
  new A().boom // ?/?/err: apply, ()-insertion
  ^
one error found
// exitCode: 1   val ys = { val t = scala.collection.mutable.Map(1 -> "foo"); xs.clone } // ?/?/ok
target/tests/EtaX/EtaX/EtaX.46.scala:55: error: not found: value xs
  val ys = { val t = scala.collection.mutable.Map(1 -> "foo"); xs.clone } // ?/?/ok
                                                               ^
one error found
