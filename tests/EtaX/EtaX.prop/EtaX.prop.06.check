// src:   val t2g: Any       = prop() _               // error: not enough arguments for method apply
// 2.13-base error
target/tests/EtaX/EtaX.prop/EtaX.prop/EtaX.prop.06.scala:12: error: not enough arguments for method apply: (i: Int)Char in class StringOps.
Unspecified value parameter i.
  val t2g: Any       = prop() _               // error: not enough arguments for method apply
                           ^
one error found

// 2.13-head error
target/tests/EtaX/EtaX.prop/EtaX.prop/EtaX.prop.06.scala:12: error: not enough arguments for method apply: (i: Int): Char in class StringOps.
Unspecified value parameter i.
  val t2g: Any       = prop() _               // error: not enough arguments for method apply
                           ^
1 error

// 2.13-new  error <no change>
// 3.0-old   error
-- [E099] Syntax Migration Warning: target/tests/EtaX/EtaX.prop/EtaX.prop/EtaX.prop.06.scala:12:30 
12 |  val t2g: Any       = prop() _               // error: not enough arguments for method apply
   |                       ^^^^^^^^
   |Only function types can be followed by _ but the current expression has type <error unspecified error>

Explanation
===========
The syntax x _ is no longer supported if x is not a function.
To convert to a function value, you need to explicitly write () => x

-- Error: target/tests/EtaX/EtaX.prop/EtaX.prop/EtaX.prop.06.scala:12:27 -------
12 |  val t2g: Any       = prop() _               // error: not enough arguments for method apply
   |                       ^^^^^^
   |        missing argument for parameter i of method apply: (i: Int): Char
1 warning found
1 error found

// 3.0       error
-- [E099] Syntax Error: target/tests/EtaX/EtaX.prop/EtaX.prop/EtaX.prop.06.scala:12:30 
12 |  val t2g: Any       = prop() _               // error: not enough arguments for method apply
   |                       ^^^^^^^^
   |Only function types can be followed by _ but the current expression has type <error unspecified error>

Explanation
===========
The syntax x _ is no longer supported if x is not a function.
To convert to a function value, you need to explicitly write () => x

1 error found

// 3.1       error <no change>

error error error error error error
