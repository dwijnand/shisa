// exitCode: 0   val t1a: () => Any = foo                // ok, eta-expansion
// exitCode: 0   val t1b: () => Any = { val t = foo; t } // `()`-insert b/c no expected type
-- [E100] Syntax Migration Warning: /d/shisa/target/tests/EtaX/EtaX/EtaX.05.scala:23:33 
23 |  val t1b: () => Any = { val t = foo; t } // `()`-insert b/c no expected type
   |                                 ^^^
   |                              method foo must be called with () argument

Explanation
===========
Previously an empty argument list () was implicitly inserted when calling a nullary method without arguments. E.g.

def next(): T = ...
          |next     // is expanded to next()

In Dotty, this idiom is an error. The application syntax has to follow exactly the parameter syntax.
Excluded from this rule are methods that are defined in Java or that override methods defined in Java.

1 warning found
// exitCode: 0   val t1c: () => Any = foo _              // ok, explicit eta-expansion requested
// exitCode: 0   val t1d: Any       = foo _              // ok, explicit eta-expansion requested
// exitCode: 0   val t1e: Any       = foo() _            // error: _ must follow method
-- [E099] Syntax Migration Warning: /d/shisa/target/tests/EtaX/EtaX/EtaX.08.scala:26:29 
26 |  val t1e: Any       = foo() _            // error: _ must follow method
   |                       ^^^^^^^
   |Only function types can be followed by _ but the current expression has type () => String

Explanation
===========
The syntax x _ is no longer supported if x is not a function.
To convert to a function value, you need to explicitly write () => x

1 warning found
// exitCode: 1   val t2a: () => Any = bar                   // error: no eta-expansion of nullary methods
-- [E007] Type Mismatch Error: /d/shisa/target/tests/EtaX/EtaX/EtaX.10.scala:28:23 
28 |  val t2a: () => Any = bar                   // error: no eta-expansion of nullary methods
   |                       ^^^
   |                       Found:    String
   |                       Required: () => Any
1 error found
// exitCode: 0   val t2b: Any       = { val t = bar   ; t } // ok: apply
// exitCode: 1   val t2c: () => Any = bar()                 // error: bar doesn't take arguments, so expanded to bar.apply(), which misses an argument
-- Error: /d/shisa/target/tests/EtaX/EtaX/EtaX.12.scala:30:26 ------------------
30 |  val t2c: () => Any = bar()                 // error: bar doesn't take arguments, so expanded to bar.apply(), which misses an argument
   |                       ^^^^^
   |        missing argument for parameter i of method apply: (i: Int): Char
1 error found
// exitCode: 0   val t2d: () => Any = bar _                 // ok
-- [E099] Syntax Migration Warning: /d/shisa/target/tests/EtaX/EtaX/EtaX.13.scala:31:27 
31 |  val t2d: () => Any = bar _                 // ok
   |                       ^^^^^
   |Only function types can be followed by _ but the current expression has type String

Explanation
===========
The syntax x _ is no longer supported if x is not a function.
To convert to a function value, you need to explicitly write () => x

1 warning found
// exitCode: 0   val t2e: () => Any = { val t = bar _ ; t } // ?/ok
-- [E099] Syntax Migration Warning: /d/shisa/target/tests/EtaX/EtaX/EtaX.14.scala:32:37 
32 |  val t2e: () => Any = { val t = bar _ ; t } // ?/ok
   |                                 ^^^^^
   |Only function types can be followed by _ but the current expression has type String

Explanation
===========
The syntax x _ is no longer supported if x is not a function.
To convert to a function value, you need to explicitly write () => x

1 warning found
// exitCode: 0   val t2f: Any       = bar _                 // ok
-- [E099] Syntax Migration Warning: /d/shisa/target/tests/EtaX/EtaX/EtaX.15.scala:33:27 
33 |  val t2f: Any       = bar _                 // ok
   |                       ^^^^^
   |Only function types can be followed by _ but the current expression has type String

Explanation
===========
The syntax x _ is no longer supported if x is not a function.
To convert to a function value, you need to explicitly write () => x

1 warning found
// exitCode: 1   val t2g: Any       = bar() _               // error: not enough arguments for method apply
-- [E099] Syntax Migration Warning: /d/shisa/target/tests/EtaX/EtaX/EtaX.16.scala:34:29 
34 |  val t2g: Any       = bar() _               // error: not enough arguments for method apply
   |                       ^^^^^^^
   |Only function types can be followed by _ but the current expression has type <nonsensical><error unspecified error></nonsensical>

Explanation
===========
The syntax x _ is no longer supported if x is not a function.
To convert to a function value, you need to explicitly write () => x

-- Error: /d/shisa/target/tests/EtaX/EtaX/EtaX.16.scala:34:26 ------------------
34 |  val t2g: Any       = bar() _               // error: not enough arguments for method apply
   |                       ^^^^^
   |        missing argument for parameter i of method apply: (i: Int): Char
1 warning found
1 error found
// exitCode: 0   val t3a: () => Any = baz                   // eta-expansion, but lint warning
// exitCode: 1   val t2Sam0S: Sam0S = baz                   // err??/warn/succ: -Xlint:eta-zero + -Xlint:eta-sam, no eta-expansion w/o 2.14?
-- [E100] Syntax Migration Warning: /d/shisa/target/tests/EtaX/EtaX/EtaX.19.scala:37:23 
37 |  val t2Sam0S: Sam0S = baz                   // err??/warn/succ: -Xlint:eta-zero + -Xlint:eta-sam, no eta-expansion w/o 2.14?
   |                       ^^^
   |                       method baz must be called with () argument

Explanation
===========
Previously an empty argument list () was implicitly inserted when calling a nullary method without arguments. E.g.

def next(): T = ...
          |next     // is expanded to next()

In Dotty, this idiom is an error. The application syntax has to follow exactly the parameter syntax.
Excluded from this rule are methods that are defined in Java or that override methods defined in Java.

-- [E007] Type Mismatch Error: /d/shisa/target/tests/EtaX/EtaX/EtaX.19.scala:37:23 
37 |  val t2Sam0S: Sam0S = baz                   // err??/warn/succ: -Xlint:eta-zero + -Xlint:eta-sam, no eta-expansion w/o 2.14?
   |                       ^^^
   |                       Found:    String
   |                       Required: Sam0S
1 warning found
1 error found
// exitCode: 1   val t2Sam0J: Sam0J = baz                   // err??/warn/succ: -Xlint:eta-zero, no eta-expansion w/o 2.14?
-- [E100] Syntax Migration Warning: /d/shisa/target/tests/EtaX/EtaX/EtaX.20.scala:38:23 
38 |  val t2Sam0J: Sam0J = baz                   // err??/warn/succ: -Xlint:eta-zero, no eta-expansion w/o 2.14?
   |                       ^^^
   |                       method baz must be called with () argument

Explanation
===========
Previously an empty argument list () was implicitly inserted when calling a nullary method without arguments. E.g.

def next(): T = ...
          |next     // is expanded to next()

In Dotty, this idiom is an error. The application syntax has to follow exactly the parameter syntax.
Excluded from this rule are methods that are defined in Java or that override methods defined in Java.

-- [E007] Type Mismatch Error: /d/shisa/target/tests/EtaX/EtaX/EtaX.20.scala:38:23 
38 |  val t2Sam0J: Sam0J = baz                   // err??/warn/succ: -Xlint:eta-zero, no eta-expansion w/o 2.14?
   |                       ^^^
   |                       Found:    String
   |                       Required: Sam0J
1 warning found
1 error found
// exitCode: 0   val t3b: Any       = { val t = baz   ; t } // ?/succ/warn: apply, ()-insertion
-- [E100] Syntax Migration Warning: /d/shisa/target/tests/EtaX/EtaX/EtaX.21.scala:39:33 
39 |  val t3b: Any       = { val t = baz   ; t } // ?/succ/warn: apply, ()-insertion
   |                                 ^^^
   |                              method baz must be called with () argument

Explanation
===========
Previously an empty argument list () was implicitly inserted when calling a nullary method without arguments. E.g.

def next(): T = ...
          |next     // is expanded to next()

In Dotty, this idiom is an error. The application syntax has to follow exactly the parameter syntax.
Excluded from this rule are methods that are defined in Java or that override methods defined in Java.

1 warning found
// exitCode: 0   val t3a: () => Any = baz _                 // ok
// exitCode: 0   val t3c: () => Any = { val t = baz _ ; t } // ok?/ok
// exitCode: 0   val t3a: Any       = baz _                 // ok
// exitCode: 0   val t3d: Any       = baz() _               // error: _ must follow method
-- [E099] Syntax Migration Warning: /d/shisa/target/tests/EtaX/EtaX/EtaX.25.scala:43:29 
43 |  val t3d: Any       = baz() _               // error: _ must follow method
   |                       ^^^^^^^
   |Only function types can be followed by _ but the current expression has type String

Explanation
===========
The syntax x _ is no longer supported if x is not a function.
To convert to a function value, you need to explicitly write () => x

1 warning found
// exitCode: 0   val t4a: () => Any = zap     // eta-expansion, but lint warning
// exitCode: 0   val t4b: () => Any = zap()   // ditto
// exitCode: 0   val t4c: () => Any = zap _   // ok
// exitCode: 0   val t4d: () => Any = zap() _ // ok
// exitCode: 0   val t5b: Any => Any = zup                   // ok
// exitCode: 0   val t5c: Sam1S      = zup                   // ok, but warning
-- Warning: /d/shisa/target/tests/EtaX/EtaX/EtaX.33.scala:51:24 ----------------
51 |  val t5c: Sam1S      = zup                   // ok, but warning
   |                        ^^^
   |method zup is eta-expanded even though Sam1S does not have the @FunctionalInterface annotation.
1 warning found
// exitCode: 0   val t5d: Sam1J      = zup                   // ok
// exitCode: 0   val t5e: Any => Any = { val t = zup   ; t } // error in 2.13, eta-expansion in 2.14
// exitCode: 0   val t5f: Any => Any = { val t = zup _ ; t } // ?/ok
// exitCode: 1   new A().boom // ?/?/err: apply, ()-insertion
-- [E100] Syntax Migration Warning: /d/shisa/target/tests/EtaX/EtaX/EtaX.38.scala:56:10 
56 |  new A().boom // ?/?/err: apply, ()-insertion
   |  ^^^^^^^^^^^^
   |  method boom must be called with () argument

Explanation
===========
Previously an empty argument list () was implicitly inserted when calling a nullary method without arguments. E.g.

def next(): T = ...
          |next     // is expanded to next()

In Dotty, this idiom is an error. The application syntax has to follow exactly the parameter syntax.
Excluded from this rule are methods that are defined in Java or that override methods defined in Java.

-- [E042] Usage Error: /d/shisa/target/tests/EtaX/EtaX/EtaX.38.scala:56:6 ------
56 |  new A().boom // ?/?/err: apply, ()-insertion
   |      ^
   |      A is a trait; it cannot be instantiated

Explanation
===========
Abstract classes and traits need to be extended by a concrete class or object
to make their functionality accessible.

You may want to create an anonymous class extending A with
  class A { }

or add a companion object with
  object A extends A

You need to implement any abstract members in both cases.


1 warning found
1 error found
// exitCode: 1   val ys = { val t = scala.collection.mutable.Map(1 -> "foo"); xs.clone } // ?/?/ok
-- [E006] Unbound Identifier Error: /d/shisa/target/tests/EtaX/EtaX/EtaX.40.scala:58:63 
58 |  val ys = { val t = scala.collection.mutable.Map(1 -> "foo"); xs.clone } // ?/?/ok
   |                                                               ^^
   |                                                           Not found: xs

Explanation
===========
The identifier for `xs` is not bound, that is,
no declaration for this identifier can be found.
That can happen, for example, if `xs` or its declaration has either been
misspelt or if an import is missing.

1 error found
